{"total":2,"pageSize":10,"pageCount":1,"data":[{"title":"","slug":"回望创建博客路上我走过的那些坑","date":"2019-03-31T12:10:48.854Z","updated":"2019-03-31T12:10:49.088Z","comments":true,"path":"api/articles/回望创建博客路上我走过的那些坑.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"回望创建博客路上我走过的那些坑\"><a href=\"#回望创建博客路上我走过的那些坑\" class=\"headerlink\" title=\"回望创建博客路上我走过的那些坑\"></a>回望创建博客路上我走过的那些坑</h1><p>唉，这hexo还真是不让人省心呢，加上我本身粗心大意，因此很多文档中的步骤没有做到位而导致了一次一次的跳坑。。。想来很多新手应该和我一样阅坑无数吧XD，不过习惯之后也就好了嘛。</p>\n<p>现在想来花费我最长时间的应该是这个主题的部署和博客后台的创建。这个主题是由minfive创造的skapp主题。这主题的安装过程中主要是在使用cnpm安装<code>lunr.js</code>时，总是会提示我没有python编程环境。没有环境？我下一个就好了嘛。然后我就去了python官网下了一个最新版的python。（这里要吐槽一下官网，干嘛弄那么多版本让人头大。。至少按照常用的顺序来做个排序什么的啊。。。我是选择的exe直装版）</p>\n<p>现在好，python装上了，问题依旧。主要就是在<code>hexo s</code>之后打开无法生成scss的样式文件。并且在重复多次安装主题的依赖环境后我才发现，特么还是那个<code>lunr.js</code>的锅。于是我就到了他的仓库页面，发现人家不支持3.x的python版本，最好是用2.7我勒个去嘞。。。</p>\n<p>嗯，python2.7装好了，这下总可以了吧？嘛。不行。</p>\n<p>这一次抛出了一个<code>gyp ERR! build error</code>的错误，上网查了一下，发现是要装一个<code>node-gyp</code>的编译环境。这里提示需要管理员权限，所以我就找到<code>git bash</code>的源文件给了权限，发现还是不行。仔细看了readme，作者仅仅是说了一句</p>\n<blockquote>\n<p>确认 PATH 中 python 路径是否设置。</p>\n</blockquote>\n<p>卧槽你说的这么不明不白我到哪里去弄啊？在长期的搜索和百度尝试无数次，结合自身的实际情况之后才研究出我还需要进入控制面板中的环境变量，在系统变量的<code>path</code>中新建到<code>PYTHON27</code>的目录，之后重启命令行即可安装成功。并不是建个<code>PYTHON</code>的变量到<code>python37</code>。。</p>\n<p>之后我遇到的一个问题就是gitalk的配置，我所用的这个主题内置了gitalk你只需要在<code>_config.yml</code>配置一下就行了。但是它的repo没有说清楚需要用的是博客项目的名字而不是仓库地址，于是你进博客在评论框上面就会有红色的ERROR提醒，看了issues才知道是这样，这也是我踩过的一个坑。</p>\n<p>这之后我遇到的一个坑就是寻找hexo的后台管理插件。因为命令行的管理方式太过于纷繁复杂，每次都要执行那些命令，发布一个文章就需要耗费比较长的时间在这些没有什么意义的事情上。所以我百度下有不少人推荐<code>hexo-admin</code>这款插件。</p>\n<p>下载安装一路顺利，当你使用<code>hexo s</code>时就会自动启动，接下来便基本可以脱离命令行进入浏览器使用图形界面进行编辑了。插件没有中文，配合谷歌翻译使用影响不大。</p>\n<p>一开始的注册登录设置密码就给我挖了一个坑，他要求我在<code>_config.yml</code>配置如下形式：</p>\n<pre><code>admin:\n  username: myfavoritename\n  password_hash: be121740bf988b2225a313fa1f107ca1\n  secret: a secret something\n</code></pre><p>嘛，我当时没挺注意这个hash和secret，直接填了明文就进去了，发现登不上。在网上搜了一番，说要什么bcrypt加密？？？这害得我又去调试人家的python脚本，拿来发现闪退。。我又用sublime进行调试，结果它给我蹦出来一个<code>Decode error - output not utf-8</code>，害得我又去晚上找教程配置sublime3的python开发环境，装插件啥的啊一大堆。。。</p>\n<p>回去仔细看了readme，玛德人家已经提供了加密的功能XDDDDDDDD，你只需要无密码进后台然后在<code>Settings &gt; Setup authentification</code>的选项里填入你的用户名密码人家自动在下面给你生成好你只要复制就行了XDDDDDDDD。。。。。</p>\n<p>原以为这样我就可以使用hexo-admin无忧无虑的发文章了，当我打了hello world准备测试下发布时，网络控制台没啥反应，命令行那边疑似抛出了未知错误，我能找到关键的一句就是<code>TypeError: path.substring is not a function</code>，我试了试点了下控制台里的deploy，抛出了<code>error: Config value &quot;admin.deployCommand&quot; not found</code>于是我到了该项目的issunes里面找答案，虽然有一些解决方案，比如让你在<code>_config.yml</code>的admin里面编辑如下内容（一行一个解决方案）：</p>\n<pre><code>deployCommand: hexo\ndeployCommand: hexo deploy\nhexo deploy\nsh hexo-deploy.sh\nnode ./node_modules/hexo/bin/hexo deploy\n</code></pre><p>我每一个都试过，可那边就是变着法的给你报错。例如：</p>\n<pre><code>deploy Error: spawn UNKNOWN\nError: spawn ./hexo-deloy.sh ENOENT\nError: spawn ./hexo-deploy.bat ENOENT\nError: spawn hexo ENOENT\nError: spawn hexo deploy ENOENT\n</code></pre><p>由上可以看到，还有让你创建shell脚本让他通过脚本来执行的，但这些方法并不可行。当然我也可以改成：</p>\n<pre><code>deployCommand: &apos;deply.bat&apos;\n</code></pre><p>在这个bat文件中打一个<code>hexo deploy</code>，但这样意义何在啊？并且我那边并不能够正常的发布文章。虽然markdown文件我看目录是创造了的，但是与其这样我还不如用命令行呢！如果在这种情况下使用这个的意义也就仅仅是给你在web下提供了一个写文章的空间了。所以说，我要这个干嘛！</p>\n<p>于是我在网上也找了几个hexo的后台插件。但我感测试的的都是国人所创，外国人的插件不敢多用，毕竟开着谷歌翻译看readme和stackoverflow是一件很痛苦的事情。</p>\n<p>随后我便测试了nihgwu的<code>hexo-hey</code>(但无法登入，作者说明该项目所依赖的后端已经死了，所以这个废了。)以及geekwen的<code>hexo-local-admin</code>（我在使用命令配置他所说的不知道什么鬼东西时可能配置错了，第二次卸载后再使用时就输出<code>throw error;</code>无法使用。我也提了<a href=\"https://github.com/geekwen/hexo-local-admin/issues/6\" target=\"_blank\" rel=\"external\">issue</a>，刚看到作者回复了我，等下我去研究下。）</p>\n<p>之后相中了tajpure的<code>hexo-editor</code>，挺好用，功能正常，配置简单，就是他了。</p>\n<p>由此告诫自己：有问题看README!有问题看README!有问题看README!</p>\n","text":"回望创建博客路上我走过的那些坑唉，这hexo还真是不让人省心呢，加上我本身粗心大意，因此很多文档中的步骤没有做到位而导致了一次一次的跳坑。。。想来很多新手应该和我一样阅坑无数吧XD，不过习惯之后也就好了嘛。现在想来花费我最长时间的应该是这个主题的部署和博客后台的创建。这个主题是由","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-31T11:55:38.934Z","updated":"2017-03-22T12:08:02.137Z","comments":true,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":"https://portablehexo.bitmoe.cn/hexopp/hexop.png","content":"<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>本版本仅适用于Win环境</strong><br>本文关键字： <strong>Hexo绿色版</strong>，<strong>Hexo便携版</strong>，<strong>Hexo配置</strong>，<strong>Hexo</strong>，<strong>U盘</strong></p>\n</blockquote>\n<p><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>是一个快速、简洁且高效的博客框架，支持 GitHub Flavored Markdown 的所有功能；具有超快生成速度，让上百个页面在几秒内瞬间完成渲染；还拥有各式各样的插件等等。</p>\n<p>但是就像很多教程里面写的那样，搭建 Hexo 本地环境，需要安装 Node.js、Git 以及使用 npm 进行安装和配置。这对于毫无经验的新手来说，是一个很大的挑战。同时，由于这些环境的存在，导致如果需要更换计算机的时候，重新安装配置一个新的Hexo环境，又得花费一些功夫。</p>\n<p>所以呢，锵锵，我们整合了一个 Hexo 便携版，来简化本地环境的部署。</p>\n<p>####<strong>版本介绍</strong><br>那么所谓的便携版到底是什么？便携版就是将 Hexo 本地环境所需要的各种依赖环境的整合到一起，做成的不需要安装的版本。</p>\n<p>本便携版（Release 1.0.0）所包含的软件如下：</p>\n<blockquote>\n<ul>\n<li>Git: 2.7.4</li>\n<li>Nodejs: 6.10.1</li>\n<li>Npm: 4.4.1</li>\n<li>Hexo: 3.2.2</li>\n</ul>\n</blockquote>\n<p>为了便携的需要，不能配置固定的环境变量，所以除此之外还有相应的批处理文件，下文将详细介绍。</p>\n<p>####<strong>从零开始，1分钟搭建Hexo写作环境</strong><br>说了这么多，我们这就开始教你如何在1分钟内，从零开始搭建Hexo写作环境！</p>\n<p>#####1 注册一个Github帐号</p>\n<p>1.1 进入<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">Github</a>，并在右边的3个框框中分别填写 用户名、邮箱地址、账户密码，并点击 <strong><code>Sign up for Github</code></strong>;</p>\n<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop2.png\" alt=\"图1.1.1\"></p>\n<p>1.2 进入欢迎页面后，点击<strong><code>Finish sign up</code></strong>;</p>\n<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop3.png\" alt=\"图1.2.1\"></p>\n<p>1.3 进入到这一步之后（<strong>图1.3.1</strong>），先别记着点任何东西，查看你的邮箱，应该会收到如下的邮件（<strong>图1.3.2</strong>），确认你的邮件。否则，你会看到错误页面（<strong>图1.3.3</strong>）。query完毕之后在<strong>图1.3.1</strong>所示的页面，点击<strong><code>+ New repository</code></strong>;</p>\n<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop5.png\" alt=\"图1.3.1\"></p>\n<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop6.png\" alt=\"图1.3.2\"></p>\n<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop7.png\" alt=\"图1.3.3\"></p>\n<p>1.4 请在红框中的 <strong><code>Repository name</code></strong> 里面输入 <strong><code>用户名.github.io</code></strong> ( <strong>用户名</strong> 就是你刚刚 <strong>步骤1.1</strong> 中注册的用户名)，然后点击 <strong><code>Create repository</code></strong>;</p>\n<p><img src=\"https://portablehexo.bitmoe.cn/hexopp/hexop8.png\" alt=\"图1.4.1\"></p>\n<p>1.5 至此，Github网页注册的部分完毕</p>\n<p>####2 下载HEXO Portable</p>\n<p>2.1 访问我们的 <a href=\"https://project.bitmoe.cn/PortableHexo/\" target=\"_blank\" rel=\"external\">HEXO Portable</a> 页面，或者 <a href=\"https://github.com/Bitmoe/PortableHexo\" target=\"_blank\" rel=\"external\">Github仓库</a> 下载最新的便携版；</p>\n<p>2.2 双击得到的自解压文件，解压到你需要安装博客的地方，可以选择硬盘或者U盘；</p>\n<p>####3 配置你的环境</p>\n<p>3.1 在你的博客的文件夹，你会发现很多批处理文件，我先介绍下各个文件的用途：</p>\n<blockquote>\n<ul>\n<li>配置基本信息 &gt;&gt; 配置博客的基本环境</li>\n<li>配置Github部署 &gt;&gt; 配置博客的部署</li>\n<li>启动命令行 &gt;&gt; 启动带环境变量的Git-Bash，否则无法使用node、npm、git等命令</li>\n<li>新建文章 &gt;&gt; 新建一篇文章</li>\n<li>渲染并本地测试 &gt;&gt; 生成并本地预览</li>\n<li>渲染并部署 &gt;&gt; 生成并部署到GitHub</li>\n<li>重置配置文件 &gt;&gt; 重置_config.yml</li>\n</ul>\n</blockquote>\n<p>3.2 我们继续进行环境配置，双击<strong><code>配置基本信息</code></strong>并按顺序输入以下信息：</p>\n<blockquote>\n<ul>\n<li>主标题：顾名思义</li>\n<li>副标题：顾名思义</li>\n<li>描述：顾名思义</li>\n<li>作者：顾名思义</li>\n<li>网站地址：填写 <strong>用户名.github.io</strong> （此处的用户名为<strong>步骤1.1</strong>中填写的用户名）<br><strong>如果您已经购买了域名，可以参看相关的文章！</strong></li>\n</ul>\n</blockquote>\n<p>3.3 双击<strong><code>配置Github部署</code></strong>并按顺序输入以下信息：</p>\n<blockquote>\n<ul>\n<li>Github的用户名：此处的用户名为<strong>步骤1.1</strong>中填写的用户名</li>\n<li>Github注册邮箱：此处的注册邮箱为<strong>步骤1.1</strong>中填写的注册邮箱</li>\n</ul>\n</blockquote>\n<p>3.4 输入完毕之后，会进行测试部署，等待屏幕提示<strong>下面将进行部署测试，稍后将有一个openssh的对话框出现，请输入你的github用户密码。</strong>的时候，按回车继续；（此处的用户密码为<strong>步骤1.1</strong>中填写的用户密码）</p>\n<p>3.5 然后继续等待，此时屏幕会出现n多行，耐心等待即可；</p>\n<p>3.6 等待屏幕提示<strong>请访问 <a href=\"https://用户名.github.io\" target=\"_blank\" rel=\"external\">https://用户名.github.io</a> 查看是否部署成功！</strong>的时候，在浏览器中输入<strong><a href=\"https://用户名.github.io\" target=\"_blank\" rel=\"external\">https://用户名.github.io</a> </strong>，理论上可以看到你的Hexo站点！（此处的用户名为<strong>步骤1.1</strong>中填写的用户名）</p>\n<p>3.7 至此，你的Hexo环境就配置完成了，这样你的这个Hexo博客文件夹无论移动到哪一台电脑，都能通过<strong>启动命令行</strong>出现的bash命令行，或者其余便捷的批处理文件比如<strong>新建文章</strong>、<strong>渲染并本地测试</strong>、<strong>渲染并部署</strong>进行相应的操作。</p>\n<p>3.8 如果你在配置中出错，可以运行<strong>重置配置文件</strong>后，再重复<strong>3.1~3.6步骤</strong></p>\n<p>####4 开始享受纯粹的Hexo写作吧！</p>\n<p>####5 备注</p>\n<blockquote>\n<ul>\n<li>本便携版以及本文均使用 <a href=\"https://creativecommons.org/licenses/by/4.0/\" target=\"_blank\" rel=\"external\">CC BY-NC-SA 4.0</a>协议；</li>\n<li>本文所有权归 <a href=\"http://qistchan.com\" target=\"_blank\" rel=\"external\">QistChan</a> &amp; <a href=\"https://wwww.bitmoe.com\" target=\"_blank\" rel=\"external\">Bitmoe Inc.</a> 所有；</li>\n<li>本便携版由 <a href=\"https://www.bitmoe.com\" target=\"_blank\" rel=\"external\">Bitmoe Inc.</a> 维护并提供技术支持；</li>\n<li>需要技术支持可以在<a href=\"https://github.com/Bitmoe/PortableHexo\" target=\"_blank\" rel=\"external\">Github仓库</a> 提交<strong><code>Issues</code></strong>；</li>\n<li>Written with <a href=\"https://stackedit.io/\" target=\"_blank\" rel=\"external\">StackEdit</a>.</li>\n</ul>\n</blockquote>\n","text":" [Figure] 如果您已经购买了域名，可以参看相关的文章！3.3 双击配置Github部署并按顺序输入以下信息：Github的用户名：此处的用户名为步骤1.1中填写的用户名Github注册邮箱：此处的注册邮箱为步骤1.1中填写的注册邮箱3.4 输入完毕之后，会进行测试部署，等","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}